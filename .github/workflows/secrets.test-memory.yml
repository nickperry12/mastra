name: Memory Tests

on:
  workflow_run:
    workflows: ['Quality assurance']
    types:
      - completed

jobs:
  check-changes:
    if: ${{ github.repository == 'mastra-ai/mastra' }}
    runs-on: ubuntu-latest
    outputs:
      memory-changed: ${{ steps.changes.outputs.memory }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Check for memory package changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: main
          filters: |
            memory:
              - 'packages/memory/**'
              - 'stores/**'
              - 'packages/core/**'
              - 'packages/deployer/**'
              - 'packages/server/**'
              - 'client-sdks/client-js/**'

  skip-tests:
    needs: check-changes
    if: needs.check-changes.outputs.memory-changed == 'false'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set success status for unchanged memory
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'success'
          context: 'Memory Tests'
          description: 'Memory packages unchanged - skipping tests'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: check-changes
    if: ${{ github.repository == 'mastra-ai/mastra' && needs.check-changes.outputs.memory-changed == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        suite:
          - pg
          - upstash
          - libsql
          - streaming
          - working-memory
          - agent-memory
          - processors
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mastra
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.1
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build vector+store packages
        run: pnpm turbo build --filter "./stores/*" --filter "mastra" --filter "@mastra/memory" --filter "@mastra/fastembed"

      - name: Compile TypeScript Workers
        run: |
          npx tsc packages/memory/integration-tests/src/worker/generic-memory-worker.ts packages/memory/integration-tests/src/worker/mock-embedder.ts --esModuleInterop --resolveJsonModule --module commonjs --target es2020 --outDir packages/memory/ --rootDir packages/memory/ --skipLibCheck

      - name: List compiled worker directory
        run: ls -R packages/memory/integration-tests/src/worker

      - name: Run Memory ${{ matrix.suite }} tests
        run: pnpm run test:${{ matrix.suite }}
        working-directory: packages/memory/integration-tests
        env:
          NODE_OPTIONS: '--max_old_space_size=8096'
          DB_URL: 'postgresql://postgres:postgres@localhost:5432/mastra'
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          KV_REST_API_URL: ${{ secrets.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ secrets.KV_REST_API_TOKEN }}
          GOOGLE_GENERATIVE_AI_API_KEY: ${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}

  test-success:
    needs: [check-changes, test]
    if: ${{ always() && needs.check-changes.outputs.memory-changed == 'true' && needs.test.result == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set success status for completed tests
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'success'
          context: 'Memory Tests'
          description: 'All memory tests passed'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  test-failure:
    needs: [check-changes, test]
    if: ${{ always() && needs.check-changes.outputs.memory-changed == 'true' && needs.test.result == 'failure' }}
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set failure status for failed tests
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'failure'
          context: 'Memory Tests'
          description: 'One or more memory tests failed'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
