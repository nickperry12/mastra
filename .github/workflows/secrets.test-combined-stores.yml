name: Combined store Tests (vector+storage)

on:
  workflow_run:
    workflows: ['Quality assurance']
    types:
      - completed

jobs:
  check-changes:
    if: ${{ github.repository == 'mastra-ai/mastra' }}
    runs-on: ubuntu-latest
    outputs:
      stores-changed: ${{ steps.changes.outputs.stores }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Check for stores package changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: main
          filters: |
            stores:
              - 'stores/**'
              - 'packages/core/**'

  skip-tests:
    needs: check-changes
    if: needs.check-changes.outputs.stores-changed == 'false'
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set success status for unchanged stores
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'success'
          context: 'Combined store Tests (vector+storage)'
          description: 'Store packages unchanged - skipping tests'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  setup:
    needs: check-changes
    if: needs.check-changes.outputs.stores-changed == 'true'
    runs-on: ubuntu-latest
    outputs:
      stores: ${{ steps.set-stores.outputs.stores }}
    steps:
      - uses: actions/checkout@v4
      - id: set-stores
        run: |
          STORES=$(ls -d stores/*/ | grep -v '_test-utils' | cut -f2 -d'/' | jq -R -s -c 'split("\n")[:-1]')
          echo "stores=$STORES" >> $GITHUB_OUTPUT
  test:
    needs: [check-changes, setup]
    if: ${{ github.repository == 'mastra-ai/mastra' && needs.check-changes.outputs.stores-changed == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        store: ${{fromJson(needs.setup.outputs.stores)}}
    services:
      qdrant:
        image: ${{ matrix.store == 'qdrant' && 'qdrant/qdrant' || '' }}
        ports:
          - 6333:6333
      chromadb:
        image: ${{ matrix.store == 'chroma' && 'chromadb/chroma' || '' }}
        ports:
          - 8000:8000

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.1
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build combined storage packages
        run: pnpm turbo --filter "@mastra/${{ matrix.store }}" build

      - name: Run ${{ matrix.store }} tests
        run: pnpm test
        working-directory: stores/${{ matrix.store }}
        env:
          NODE_OPTIONS: '--max_old_space_size=8096'
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          ASTRA_DB_ENDPOINT: ${{ secrets.ASTRA_DB_ENDPOINT }}
          ASTRA_DB_TOKEN: ${{ secrets.ASTRA_DB_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.ABHI_CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.ABHI_CLOUDFLARE_ACCOUNT_ID }}

  test-success:
    needs: [check-changes, setup, test]
    if: ${{ always() && needs.check-changes.outputs.stores-changed == 'true' && needs.test.result == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set success status for completed tests
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'success'
          context: 'Combined store Tests (vector+storage)'
          description: 'All combined store tests passed'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  test-failure:
    needs: [check-changes, setup, test]
    if: ${{ always() && needs.check-changes.outputs.stores-changed == 'true' && needs.test.result == 'failure' }}
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Set failure status for failed tests
        uses: ./.github/workflows/shared-actions/set-pr-status
        with:
          status: 'failure'
          context: 'Combined store Tests (vector+storage)'
          description: 'One or more combined store tests failed'
          sha: ${{ github.event.workflow_run.head_sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
